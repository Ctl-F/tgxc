%mask 4
%mask-enum
None
R32
R16
R8
R64
R64H
R64L
F32
RVec
Table
DeR32
Imm
Kwd
%end

nop > 0x0000
mov R32 R32 > 0x0001
mov R16 R16 > 0x0002
mov R8 R8 > 0x0003
mov R64 R64 > 0x0004
mov DeR32 Imm > 0x0005

# Will need to be reordered to fit what the vm expects.
# Default encoding will be out of order
mov DeR32 Kwd Imm > 0x0006, HandleMovDr32C8
mov Table R32 Imm > 0x0007, HandleMovToTblC8
mov Table R32 R8 > 0x0008, HandleMovToTblR8
mov R32 Table Imm > 0x0009, HandleMovFromTblC8
mov R32 Table R8 > 0x000A, HandleMovFromTblR8

mov R32 R64H > 0x000B
mov R32 R64L > 0x000C
mov R64H R32 > 0x000D
mov R64L R32 > 0x000E
mov R32 Imm > 0x000F
mov R16 Imm > 0x0010
mov R8 Imm > 0x0011

# 0x0013 will need to be handled by the handler function
# it will need to detect which R64 and also parse the original number
# to properly encode it, as the default encoding will only encode upto 32 bits
mov R64 Imm > 0x0012, HandleMovConst48

mov F32 F32 > 0x0014
mov F32 Imm > 0x0015
mov R32 F32 > 0x0016
movc R32 F32 > 0x0017
mov F32 R32 > 0x0018
movc F32 R32 > 0x0019
mov R32 DeR32 > 0x001A
mov R8 DeR32 > 0x001B
mov R16 DeR32 > 0x001C
mov R64 DeR32 > 0x001D
mov DeR32 R8 > 0x001E
mov DeR32 R16 > 0x001F
mov DeR32 R32 > 0x0020
mov DeR32 R64 > 0x0021
mov DeR32 F32 > 0x0022
mov DeR32 DeR32 Imm > 0x0023
mov F32 DeR32 > 0x0024
movia DeR32 DeR32 Imm > 0x0025
movda DeR32 DeR32 Imm > 0x0026
swap R32 R32 > 0x0027
swap R8 R8 > 0x0028
swap R16 R16 > 0x0029
swap R64 R64 > 0x002A
swap F32 F32 > 0x002B
mcpy R32 R32 R32 > 0x002C
mcmp R32 R32 R32 R32 > 0x002D
mclr R32 R32 R8 > 0x002E
mclr R32 R32 R16 > 0x002F
mclr R32 R32 R32 > 0x0030
mclr R32 R32 R64 > 0x0031
push R8 > 0x0032

# HandlePushConst will have to also pivot to
# 0x0035, 0x0037, 0x0039, 0x003B
push Kwd Imm > 0x0033, HandlePushConst
push R16 > 0x0034
push R32 > 0x0036
push R64 > 0x0038
push F32 > 0x003A
pop R8 > 0x003C
pop R16 > 0x003D
pop R32 > 0x003E
pop R64 > 0x003F
pop F32 > 0x0040
push Kwd > 0x0041, HandlePushAll
pop Kwd > 0x0042, HandlePopAll
sto DeR32 Table R8 R8 > 0x0043, HandleTableStore
ld Table DeR32 R8 R8 > 0x0044, HandleTableLoad

add R32 R32 R32 > 0x0045
add R32 R32 > 0x0045, HandleMathRegExpand
add R8 R8 R8 > 0x0046
add R8 R8 > 0x0046, HandleMathRegExpand
add R16 R16 R16 > 0x0047
add R16 R16 > 0x0047, HandleMathRegExpand
add R64 R64 R64 > 0x0048
add R64 R64 > 0x0048, HandleMathRegExpand
#todo